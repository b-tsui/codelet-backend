"""create all tables

Revision ID: be0d4210024a
Revises: 
Create Date: 2020-06-08 15:32:24.353980

"""
from alembic import op
import sqlalchemy as sa
from datetime import datetime


# revision identifiers, used by Alembic.
revision = 'be0d4210024a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    categories_table = op.create_table('categories',
                                       sa.Column('id', sa.Integer(),
                                                 nullable=False),
                                       sa.Column('name', sa.String(
                                           length=50), nullable=False),
                                       sa.PrimaryKeyConstraint('id'),
                                       sa.UniqueConstraint('name')
                                       )
    users_table = op.create_table('users',
                                  sa.Column('id', sa.Integer(),
                                            nullable=False),
                                  sa.Column('email', sa.String(
                                      length=50), nullable=False),
                                  sa.Column('nickname', sa.String(
                                      length=50), nullable=False),
                                  sa.PrimaryKeyConstraint('id'),
                                  sa.UniqueConstraint('email')
                                  )
    sets_table = op.create_table('sets',
                                 sa.Column('id', sa.Integer(), nullable=False),
                                 sa.Column('title', sa.String(
                                     length=51), nullable=False),
                                 sa.Column('description', sa.Text(),
                                           nullable=True),
                                 sa.Column('category_id',
                                           sa.Integer(), nullable=False),
                                 sa.Column('user_id', sa.Integer(),
                                           nullable=False),
                                 sa.Column('created_at',
                                           sa.DateTime(), nullable=True),
                                 sa.ForeignKeyConstraint(
                                     ['category_id'], ['categories.id'], ),
                                 sa.ForeignKeyConstraint(
                                     ['user_id'], ['users.id'], ),
                                 sa.PrimaryKeyConstraint('id')
                                 )
    cards_table = op.create_table('cards',
                                  sa.Column('id', sa.Integer(),
                                            nullable=False),
                                  sa.Column('term', sa.String(
                                      length=100), nullable=False),
                                  sa.Column('definition', sa.Text(),
                                            nullable=False),
                                  sa.Column('set_id', sa.Integer(),
                                            nullable=False),
                                  sa.ForeignKeyConstraint(
                                      ['set_id'], ['sets.id'], ),
                                  sa.PrimaryKeyConstraint('id')
                                  )
    favorites_table = op.create_table('favorites',
                                      sa.Column('id', sa.Integer(),
                                                nullable=False),
                                      sa.Column(
                                          'set_id', sa.Integer(), nullable=False),
                                      sa.Column(
                                          'user_id', sa.Integer(), nullable=False),
                                      sa.ForeignKeyConstraint(
                                          ['set_id'], ['sets.id'], ),
                                      sa.ForeignKeyConstraint(
                                          ['user_id'], ['users.id'], ),
                                      sa.PrimaryKeyConstraint('id')
                                      )
    votes_table = op.create_table('votes',
                                  sa.Column('id', sa.Integer(),
                                            nullable=False),
                                  sa.Column('set_id', sa.Integer(),
                                            nullable=False),
                                  sa.Column('user_id', sa.Integer(),
                                            nullable=False),
                                  sa.Column('is_upvote', sa.Boolean(),
                                            nullable=True),
                                  sa.ForeignKeyConstraint(
                                      ['set_id'], ['sets.id'], ),
                                  sa.ForeignKeyConstraint(
                                      ['user_id'], ['users.id'], ),
                                  sa.PrimaryKeyConstraint('id')

                                  )

    # Add seeder for users table
    op.bulk_insert(users_table, [
        {
            "nickname": 'codelet app',
            "email": "codelet.app@gmail.com"
        },
        {
            "nickname": 'John Smith',
            "email": "js@js.com"
        }
    ])

    # Add seeders for categories table
    op.bulk_insert(categories_table, [
        {'name': 'Data Structures'},  # 1
        {'name': 'Algorithms'},  # 2
        {'name': 'Javascript'},  # 3
        {'name': 'Python'},  # 4
        {'name': 'Databases'},  # 5
        {'name': 'Frontend'},  # 6
        {'name': 'Backend'},  # 7
    ])

    # Add seeders for sets table
    op.bulk_insert(sets_table, [
        {
            'title': 'Trees',
            'description': 'Study tree data structures!',
            'category_id': 1,
            'user_id': 1,
            'created_at': datetime.now()
        },
        {
            'title': 'Graphs',
            'description': 'Learn some graph data structures.',
            'category_id': 1,
            'user_id': 1,
            'created_at': datetime.now()
        },
        {
            'title': 'Linked Lists',
            'description': 'Study linked lists data structures',
            'category_id': 1,
            'user_id': 1,
            'created_at': datetime.now()
        },
        {
            'title': 'Concepts',
            'description': 'Study some algorithm concepts.',
            'category_id': 2,
            'user_id': 1,
            'created_at': datetime.now()
        },
        {
            'title': 'Sorting',
            'description': 'Learn about different sorting mechanisms.',
            'category_id': 2,
            'user_id': 1,
            'created_at': datetime.now()
        },
        {
            'title': 'Datatypes',
            'description': 'Study various Javascript datatypes!',
            'category_id': 3,
            'user_id': 1,
            'created_at': datetime.now()
        },
        {
            'title': 'Syntax',
            'description': 'Brush up on some Javascript syntax.',
            'category_id': 3,
            'user_id': 1,
            'created_at': datetime.now()
        },
        {
            'title': 'Datatypes',
            'description': 'Need a refresher on python datatypes? Start here!',
            'category_id': 4,
            'user_id': 1,
            'created_at': datetime.now()
        },
        {
            'title': 'Syntax',
            'description': 'No semi-colons here! Learn some python syntax!',
            'category_id': 4,
            'user_id': 1,
            'created_at': datetime.now()
        },
        {
            'title': 'SQL',
            'description': 'Review some SQL topics!',
            'category_id': 5,
            'user_id': 1,
            'created_at': datetime.now()
        },
        {
            'title': 'Sequelize',
            'description': 'Learn about Sequelize!',
            'category_id': 5,
            'user_id': 1,
            'created_at': datetime.now()
        },
        {
            'title': 'SQLAlchemy',
            'description': 'Learn about SQLAlchemy!',
            'category_id': 5,
            'user_id': 1,
            'created_at': datetime.now()
        },
        {
            'title': 'React',
            'description': 'A spicy new javascript framework',
            'category_id': '6',
            'user_id': 1,
            'created_at': datetime.now()
        },
        {
            'title': 'Vanilla JS',
            'description': 'Good ole\' unadulterated javascript. ',
            'category_id': '6',
            'user_id': 1,
            'created_at': datetime.now()
        },
        {
            'title': 'HTML/CSS',
            'description': 'Learn about the backbones of the world wide web!',
            'category_id': '6',
            'user_id': 1,
            'created_at': datetime.now()
        },
        {
            'title': 'Flask',
            'description': 'Dive into Flask!',
            'category_id': '7',
            'user_id': 1,
            'created_at': datetime.now()
        },
        {
            'title': 'Node',
            'description': 'Learn about Node.js!',
            'category_id': '7',
            'user_id': 1,
            'created_at': datetime.now()
        },
    ])
# ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('votes')
    op.drop_table('favorites')
    op.drop_table('cards')
    op.drop_table('sets')
    op.drop_table('users')
    op.drop_table('categories')
    # ### end Alembic commands ###
